'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _utils=require('./utils.js');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Attrs=function Attrs($){var length=void 0;var that=$.attributes;var sync=function sync(){length=that.length};sync();return function(){function _class(){_classCallCheck(this,_class)}_createClass(_class,[{key:'all',value:function all(){return $.getAttributeNames()}// Examples:
// add([['name1', 'value1'], ['name2', 'value2']])
// add('name', 'value')
// add(['name1', 'name2'], ['value1', 'value2'])
},{key:'add',value:function add(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}var pairs=(0,_utils.args2pairs)(args);pairs.forEach(function(pair){return $.setAttribute.apply($,pair)});sync();return this}},{key:'remove',value:function remove(){for(var _len2=arguments.length,names=Array(_len2),_key2=0;_key2<_len2;_key2++){names[_key2]=arguments[_key2]}names=(0,_utils.args2arr)(names);names.forEach(function(name){return $.removeAttribute(name)});sync();return this}},{key:'has',value:function has(){for(var _len3=arguments.length,names=Array(_len3),_key3=0;_key3<_len3;_key3++){names[_key3]=arguments[_key3]}if(!names.length)return $.hasAttributes();names=(0,_utils.args2arr)(names);return names.every(function(name){return $.hasAttribute(name)})}},{key:'hasSome',value:function hasSome(){for(var _len4=arguments.length,names=Array(_len4),_key4=0;_key4<_len4;_key4++){names[_key4]=arguments[_key4]}names=(0,_utils.args2arr)(names);return names.some(function(name){return $.hasAttribute(name)})}},{key:'get',value:function get(){for(var _len5=arguments.length,names=Array(_len5),_key5=0;_key5<_len5;_key5++){names[_key5]=arguments[_key5]}names=(0,_utils.args2arr)(names);return names.map(function(name){return{name:name,value:$.getAttribute(name)}})}},{key:'length',get:function get(){return length},set:function set(length){console.error('NamedNodeMap: length is read-only')}}]);return _class}()};exports.default=Attrs;