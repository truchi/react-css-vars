{"version":3,"sources":["../lib/utils.js"],"names":["isNull","o","isObject","isFunction","name","str","startsWith","isUpper","toUpperCase","replace","m","toLowerCase","toString","substr","split","join","get","obj","args","getDisplayName","WrappedComponent","displayName","create","arg","tag","className","component","Tag","props","children"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAEO,IAAMA,0BAAa,SAAbA,MAAa,CAACC,CAAD;AAAA,SAAOA,MAAM,IAAb;AAAA,CAAnB;AACA,IAAMC,8BAAa,SAAbA,QAAa,CAACD,CAAD;AAAA,SAAO,CAACD,OAAOC,CAAP,CAAD,IAAc,QAAOA,CAAP,yCAAOA,CAAP,OAAa,QAAlC;AAAA,CAAnB;AACA,IAAME,kCAAa,SAAbA,UAAa,CAACF,CAAD;AAAA,SAAqB,OAAOA,CAAP,KAAa,UAAlC;AAAA,CAAnB;;AAEA,IAAMG,sBAAO,SAAPA,IAAO,CAACC,GAAD,EAAS;AAC3B,MAAGA,IAAIC,UAAJ,CAAe,IAAf,CAAH,EAAyB,OAAOD,GAAP;;AAEzB,MAAIE,UAAUF,IAAI,CAAJ,MAAWA,IAAI,CAAJ,EAAOG,WAAP,EAAzB;AACAH,QAAMA,IAAII,OAAJ,CAAY,UAAZ,EAAwB,UAACC,CAAD;AAAA,iBAAWA,EAAEC,WAAF,EAAX;AAAA,GAAxB,EAAsDC,QAAtD,EAAN;;AAEA,MAAIL,OAAJ,EAAa;AACXF,UAASA,IAAIQ,MAAJ,CAAW,CAAX,CAAT;AACAR,UAASA,IAAIS,KAAJ,CAAU,EAAV,CAAT;AACAT,QAAI,CAAJ,IAASA,IAAI,CAAJ,EAAOG,WAAP,EAAT;AACAH,UAASA,IAAIU,IAAJ,CAAS,EAAT,CAAT;AACD;;AAED,gBAAYV,GAAZ;AACD,CAdM;;AAgBA,IAAMW,oBAAM,SAANA,GAAM,CAACC,GAAD;AAAA,oCAASC,IAAT;AAASA,QAAT;AAAA;;AAAA,SAAkBf,WAAWc,GAAX,IACjCA,qBAAOC,IAAP,CADiC,GAEjCD,GAFe;AAAA,CAAZ;;AAIA,IAAME,0CAAiB,SAAjBA,cAAiB,CAACC,gBAAD;AAAA,SAC5BA,iBAAiBC,WAAjB,IAAgCD,iBAAiBhB,IAAjD,IAAyD,WAD7B;AAAA,CAAvB;;AAGA,IAAMkB,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAS;AAAA,aAE3B,OAAOA,GAAP,KAAe,QAAf,GACI;AACAC,SAAaD,GADb;AAEAE,eAAa,EAFb;AAGAJ,iBAAa;AAHb,GADJ,GAMI;AACAG,SAAaD,IAAIC,GAAJ,IAAmB,KADhC;AAEAC,eAAaF,IAAIE,SAAJ,IAAmB,EAFhC;AAGAJ,iBAAaE,IAAIF,WAAJ,IAAmBE,IAAIE,SAAvB,IAAoC;AAHjD,GARuB;AAAA,MACvBD,GADuB,QACvBA,GADuB;AAAA,MAClBC,SADkB,QAClBA,SADkB;AAAA,MACPJ,WADO,QACPA,WADO;;AAc7B,MAAIK;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACO;AACP,YAAIC,MAAMH,GAAV;;AAEA,eAAO;AAAC,aAAD;AAAA,qBAAK,WAAWC,SAAhB,IAA+B,KAAKG,KAApC;AAA4C,eAAKA,KAAL,CAAWC;AAAvD,SAAP;AACD;AALC;;AAAA;AAAA,qBAAJ;;AAQAH,YAAUL,WAAV,GAAwBA,WAAxB;;AAEA,SAAOK,SAAP;AACD,CAzBM","file":"utils.js","sourcesContent":["import React, { Component } from 'react'\n\nexport const isNull     = (o) => o === null\nexport const isObject   = (o) => !isNull(o) && typeof o === 'object'\nexport const isFunction = (o) =>               typeof o === 'function'\n\nexport const name = (str) => {\n  if(str.startsWith('--')) return str\n\n  let isUpper = str[0] === str[0].toUpperCase()\n  str = str.replace(/([A-Z])/g, (m) => `-${m.toLowerCase()}`).toString()\n\n  if (isUpper) {\n    str    = str.substr(1)\n    str    = str.split('')\n    str[0] = str[0].toUpperCase()\n    str    = str.join('')\n  }\n\n  return `--${str}`\n}\n\nexport const get = (obj, ...args) => isFunction(obj)\n  ? obj(...args)\n  : obj\n\nexport const getDisplayName = (WrappedComponent) =>\n  WrappedComponent.displayName || WrappedComponent.name || 'Component'\n\nexport const create = (arg) => {\n  let { tag, className, displayName } =\n    typeof arg === 'string'\n      ? {\n        tag        : arg\n      , className  : ''\n      , displayName: 'Wrapped'\n      }\n      : {\n        tag        : arg.tag         || 'div'\n      , className  : arg.className   || ''\n      , displayName: arg.displayName || arg.className || 'Wrapped'\n      }\n\n  let component = class extends Component {\n    render() {\n      let Tag = tag\n\n      return <Tag className={className} {...this.props}>{this.props.children}</Tag>\n    }\n  }\n\n  component.displayName = displayName\n\n  return component\n}\n"]}